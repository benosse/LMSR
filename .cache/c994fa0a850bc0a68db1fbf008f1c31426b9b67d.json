{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/benoit/Documents/TutoMeteor/client/components/SceneTest.vue","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions",["flow",{}],"nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}]],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"sourceFileName":"/home/benoit/Documents/TutoMeteor/client/components/SceneTest.vue","filename":"/home/benoit/Documents/TutoMeteor/client/components/SceneTest.vue","passPerPreset":false,"envName":"development","cwd":"/home/benoit/Documents/TutoMeteor","root":"/home/benoit/Documents/TutoMeteor","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.7.6","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"TSModuleBlock":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/home/benoit/Documents/TutoMeteor/client/components/SceneTest.vue","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"/home/benoit/Documents/TutoMeteor/client/components/SceneTest.vue"}},"code":"var Vue;\nmodule.link(\"vue\", {\n  \"default\": function (v) {\n    Vue = v;\n  }\n}, 0);\nvar Aframe;\nmodule.link(\"aframe\", {\n  Aframe: function (v) {\n    Aframe = v;\n  }\n}, 1);\nvar Object;\nmodule.link(\"./Object.vue\", {\n  \"default\": function (v) {\n    Object = v;\n  }\n}, 2);\nvar Model;\nmodule.link(\"./Model.vue\", {\n  \"default\": function (v) {\n    Model = v;\n  }\n}, 3);\nVue.config.ignoredElements = ['a-scene', 'a-entity', 'a-camera', 'a-box', 'a-sky', 'a-sphere', 'a-cylinder', 'a-plane', 'a-gltf-model']; //Aframe\n\nAFRAME.registerShader('my-shader', {\n  schema: {\n    color: {\n      type: 'color',\n      is: 'uniform'\n    },\n    camera: {\n      type: 'selector'\n    },\n    texture: {\n      type: 'map'\n    }\n  },\n  init: function (data) {\n    data = AFRAME.utils.extend({}, data);\n    console.log(data.camera.object3D[0]); // make sure the camera matrices are updated\n\n    /*\n    camera.updateProjectionMatrix()\n    camera.updateMatrixWorld()\n    camera.updateWorldMatrix()\n    \n     // get the matrices from the camera so they're fixed in camera's original position\n    const viewMatrixCamera = camera.matrixWorldInverse.clone()\n    const projectionMatrixCamera = camera.projectionMatrix.clone()\n    const modelMatrixCamera = camera.matrixWorld.clone()\n    const projPosition = camera.position.clone()\n    */\n  },\n  update: function (old) {\n    console.log(\"d\", old);\n    console.log(\"th\", this.data);\n  }\n  /*\n  vertexShader:`\n      uniform mat4 viewMatrixCamera;\n      uniform mat4 projectionMatrixCamera;\n      uniform mat4 modelMatrixCamera;\n       varying vec4 vWorldPosition;\n      varying vec3 vNormal;\n      varying vec4 vTexCoords;\n        void main() {\n      vNormal = mat3(modelMatrix) * normal;\n      vWorldPosition = modelMatrix * vec4(position, 1.0);\n      vTexCoords = projectionMatrixCamera * viewMatrixCamera * vWorldPosition;\n      gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n      }\n  `\n  ,\n   fragmentShader: `\n      varying vec2 vUv;\n      uniform vec3 color;\n      uniform float timeMsec; // A-Frame time in milliseconds.\n       void main() {\n      float time = timeMsec / 1000.0; // Convert from A-Frame milliseconds to typical time in seconds.\n      // Use sin(time), which curves between 0 and 1 over time,\n      // to determine the mix of two colors:\n      //    (a) Dynamic color where 'R' and 'B' channels come\n      //        from a modulus of the UV coordinates.\n      //    (b) Base color.\n      //\n      // The color itself is a vec4 containing RGBA values 0-1.\n      gl_FragColor = mix(\n          vec4(mod(vUv , 0.05) * 20.0, 1.0, 1.0),\n          vec4(color, 1.0),\n          sin(time)\n      );\n      }\n  `\n  ,\n  */\n\n}); //Vue\n\nmodule.exportDefault({\n  name: \"SceneTest\",\n  components: {\n    Object: Object,\n    Model: Model\n  },\n  data: function () {\n    return {};\n  },\n  mounted: function () {},\n  meteor: {},\n  components: {},\n  methods: {},\n  watch: {},\n  computed: {}\n});","map":{"version":3,"sources":["/home/benoit/Documents/TutoMeteor/client/components/SceneTest.vue"],"names":["Vue","module","link","v","Aframe","Object","Model","config","ignoredElements","AFRAME","registerShader","schema","color","type","is","camera","texture","init","data","utils","extend","console","log","object3D","update","old","exportDefault","name","components","mounted","meteor","methods","watch","computed"],"mappings":"AAAA,IAAIA,GAAJ;AAAQC,MAAM,CAACC,IAAP,CAAY,KAAZ,EAAkB;AAAC,aAAQ,UAASC,CAAT,EAAW;AAACH,IAAAA,GAAG,GAACG,CAAJ;AAAM;AAA3B,CAAlB,EAA+C,CAA/C;AAAkD,IAAIC,MAAJ;AAAWH,MAAM,CAACC,IAAP,CAAY,QAAZ,EAAqB;AAACE,EAAAA,MAAM,EAAC,UAASD,CAAT,EAAW;AAACC,IAAAA,MAAM,GAACD,CAAP;AAAS;AAA7B,CAArB,EAAoD,CAApD;AAAuD,IAAIE,MAAJ;AAAWJ,MAAM,CAACC,IAAP,CAAY,cAAZ,EAA2B;AAAC,aAAQ,UAASC,CAAT,EAAW;AAACE,IAAAA,MAAM,GAACF,CAAP;AAAS;AAA9B,CAA3B,EAA2D,CAA3D;AAA8D,IAAIG,KAAJ;AAAUL,MAAM,CAACC,IAAP,CAAY,aAAZ,EAA0B;AAAC,aAAQ,UAASC,CAAT,EAAW;AAACG,IAAAA,KAAK,GAACH,CAAN;AAAQ;AAA7B,CAA1B,EAAyD,CAAzD;AAK/MH,GAAG,CAACO,MAAJ,CAAWC,eAAX,GAA6B,CAC3B,SAD2B,EAE3B,UAF2B,EAG3B,UAH2B,EAI3B,OAJ2B,EAK3B,OAL2B,EAM3B,UAN2B,EAO3B,YAP2B,EAQ3B,SAR2B,EAS3B,cAT2B,CAA7B,C,CAaA;;AAGAC,MAAM,CAACC,cAAP,CAAsB,WAAtB,EAAmC;AAC/BC,EAAAA,MAAM,EAAE;AACJC,IAAAA,KAAK,EAAE;AAACC,MAAAA,IAAI,EAAE,OAAP;AAAgBC,MAAAA,EAAE,EAAE;AAApB,KADH;AAEJC,IAAAA,MAAM,EAAE;AAAEF,MAAAA,IAAI,EAAE;AAAR,KAFJ;AAGJG,IAAAA,OAAO,EAAE;AAACH,MAAAA,IAAI,EAAE;AAAP;AAHL,GADuB;AAO/BI,EAAAA,IAAI,EAAC,UAASC,IAAT,EAAe;AAEhBA,IAAAA,IAAI,GAAGT,MAAM,CAACU,KAAP,CAAaC,MAAb,CAAoB,EAApB,EAAwBF,IAAxB,CAAP;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAI,CAACH,MAAL,CAAYQ,QAAZ,CAAqB,CAArB,CAAZ,EAHgB,CAOhB;;AACA;;;;;;;;;;;AAaH,GA5B8B;AA8B/BC,EAAAA,MAAM,EAAE,UAAUC,GAAV,EAAe;AACnBJ,IAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ,EAAgBG,GAAhB;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkB,KAAKJ,IAAvB;AACH;AAGD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AApC+B,CAAnC,E,CAsFA;;AA3GAjB,MAAM,CAACyB,aAAP,CAgHe;AACbC,EAAAA,IAAI,EAAE,WADO;AAGbC,EAAAA,UAAU,EAAE;AACVvB,IAAAA,MAAM,EAANA,MADU;AAEVC,IAAAA,KAAK,EAALA;AAFU,GAHC;AASbY,EAAAA,IATa,cASN;AAEL,WAAO,EAAP;AACD,GAZY;AAcbW,EAAAA,OAda,cAcJ,CAER,CAhBY;AAkBbC,EAAAA,MAAM,EAAE,EAlBK;AAqBbF,EAAAA,UAAU,EAAE,EArBC;AAwBbG,EAAAA,OAAO,EAAE,EAxBI;AA8BbC,EAAAA,KAAK,EAAE,EA9BM;AAiCbC,EAAAA,QAAQ,EAAE;AAjCG,CAhHf","sourcesContent":["\n\n\n//Vue\nimport Vue from \"vue\";\nVue.config.ignoredElements = [\n  'a-scene',\n  'a-entity',\n  'a-camera',\n  'a-box',\n  'a-sky',\n  'a-sphere',\n  'a-cylinder',\n  'a-plane',\n  'a-gltf-model',\n];\n\n\n//Aframe\nimport {Aframe} from \"aframe\"\n\nAFRAME.registerShader('my-shader', {\n    schema: {\n        color: {type: 'color', is: 'uniform'},\n        camera: { type: 'selector' },\n        texture: {type: 'map'},\n    },\n\n    init:function(data) {\n\n        data = AFRAME.utils.extend({}, data);\n        console.log(data.camera.object3D[0])\n\n        \n\n        // make sure the camera matrices are updated\n        /*\n        camera.updateProjectionMatrix()\n        camera.updateMatrixWorld()\n        camera.updateWorldMatrix()\n        \n\n        // get the matrices from the camera so they're fixed in camera's original position\n        const viewMatrixCamera = camera.matrixWorldInverse.clone()\n        const projectionMatrixCamera = camera.projectionMatrix.clone()\n        const modelMatrixCamera = camera.matrixWorld.clone()\n        const projPosition = camera.position.clone()\n        */\n\n    },\n\n    update: function (old) {\n        console.log(\"d\",old);\n        console.log(\"th\", this.data);\n    },\n\n\n    /*\n    vertexShader:`\n        uniform mat4 viewMatrixCamera;\n        uniform mat4 projectionMatrixCamera;\n        uniform mat4 modelMatrixCamera;\n\n        varying vec4 vWorldPosition;\n        varying vec3 vNormal;\n        varying vec4 vTexCoords;\n\n\n        void main() {\n        vNormal = mat3(modelMatrix) * normal;\n        vWorldPosition = modelMatrix * vec4(position, 1.0);\n        vTexCoords = projectionMatrixCamera * viewMatrixCamera * vWorldPosition;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n        }\n    `\n    ,\n\n    fragmentShader: `\n        varying vec2 vUv;\n        uniform vec3 color;\n        uniform float timeMsec; // A-Frame time in milliseconds.\n\n        void main() {\n        float time = timeMsec / 1000.0; // Convert from A-Frame milliseconds to typical time in seconds.\n        // Use sin(time), which curves between 0 and 1 over time,\n        // to determine the mix of two colors:\n        //    (a) Dynamic color where 'R' and 'B' channels come\n        //        from a modulus of the UV coordinates.\n        //    (b) Base color.\n        //\n        // The color itself is a vec4 containing RGBA values 0-1.\n        gl_FragColor = mix(\n            vec4(mod(vUv , 0.05) * 20.0, 1.0, 1.0),\n            vec4(color, 1.0),\n            sin(time)\n        );\n        }\n    `\n    ,\n    */\n});\n\n\n\n\n\n\n//Vue\nimport Object from \"./Object.vue\";\nimport Model from \"./Model.vue\";\n\n\nexport default {\n  name: \"SceneTest\",\n\n  components: {\n    Object,\n    Model,\n  },\n\n \n  data() {\n    \n    return {}\n  },\n\n  mounted(){\n\n  },\n\n  meteor: {\n  },\n\n  components: {\n  },\n\n  methods: {\n\n  \n   \n  },\n\n  watch: {\n  },\n\n  computed: {\n    \n  }\n\n  \n};\n\n"]},"sourceType":"module","hash":"c994fa0a850bc0a68db1fbf008f1c31426b9b67d"}
